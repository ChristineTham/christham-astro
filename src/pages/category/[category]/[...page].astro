---
import type { PaginateFunction, Page } from 'astro'
import type { CollectionEntry } from 'astro:content'
import type { Frontmatter } from '../../../config'
import { getCollection } from 'astro:content'
import { SiteMetadata, categoryDetail, PAGE_SIZE } from '../../../config'
import Base from '../../../layouts/base.astro'
import PageHero from '../../../components/pagehero.astro'
import BlogRoll from '../../../components/blogroll.astro'
import Img from '../../../components/img.astro'
import PaginateControl from '../../../components/paginatecontrol.astro'

export interface Props {
  page: Page<CollectionEntry<'blog'>>
}

const { category } = Astro.params
const { page } = Astro.props

const detail = categoryDetail(category as string)

const frontmatter: Frontmatter = {
  title: 'Category: ' + category + (page.size < page.total ? ' (page ' + page.currentPage + ' of ' + page.lastPage + ')' : ''),
  description: detail.description,
  coverImage: detail.coverImage,
  socialImage: detail.socialImage,
  publishDate: SiteMetadata.buildTime,
}

const currentPage = Astro.url.pathname.replace(/(\/\d*)?\/?$/, '')

export async function getStaticPaths({ paginate }: { paginate: PaginateFunction }) {
  const allPosts = await getCollection('blog')
  const posts = allPosts.sort((a, b) => +b.data.publishDate - +a.data.publishDate).filter(p => !p.data.draft)

  const categories = Array.from(new Set(posts.flatMap(post => post.data.categories)))

  return categories.map(category => {
    return paginate(posts.filter(post => category && post.data.categories?.includes(category)), {
      params: { category },
      pageSize: PAGE_SIZE
    })
  })
}
---

<Base frontmatter={frontmatter}>
  <header>
    <PageHero
      title={frontmatter.title}
      description={frontmatter.description}
      coverImage={frontmatter.coverImage}
      socialImage={frontmatter.socialImage}
    >
    <Img slot="before" src={detail.icon} alt={category as string} class="h-32 w-32" />
    <PaginateControl base={currentPage} page={page} />
  </PageHero>
  </header>
  <main>
    <section class="px-4 py-8 max-w-screen-lg mx-auto prose prose-purple lg:prose-xl dark:prose-invert" >
      {detail.content}
    </section>
    <BlogRoll posts={page.data} />
  </main>
</Base>
